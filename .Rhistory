right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
) + decorate_annotation("foo", slice = 1, {
grid.rect(x = 0, width = unit(2, "mm"), gp = gpar(fill = i, col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
Heatmap(logFC_matrix, name = "logFC",
cluster_rows = TRUE,
show_row_dend = TRUE,
width = unit(8, "cm"),
heatmap_legend_param = list(direction = "horizontal"),
cluster_columns = FALSE,
split=8,
show_row_names = FALSE,
show_column_names = TRUE,
column_names_side = "top",
clustering_distance_rows = "pearson",
row_names_gp = gpar(fontsize = 10),
column_names_gp = gpar(fontsize = 10),
column_names_rot = 0,
column_names_centered = TRUE,
right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
)
for(i in 1:8) {
+ decorate_annotation("foo", slice = i, {
grid.rect(x = 0, width = unit(2, "mm"), gp = gpar(fill = i, col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
}
# add functional enrichments
heatmap_enrichment_terms = list(
text1 = c("Translation", "Translation Regulation", "Ribonucleoprotein Complex"),
text2 = c("Nuclear Protein-Containing Complex", "Homologous Recombination*"),
text3 = c("Transferase Activity*"),
text4 = c("Lysosome", "Protein Kinase Activity", "Phosphorylation"),
text5 = c("Innate Immune Response", "Defense Response to Another Organism", "Apoptosis"),
text6 = c("Lysosome*", "Lytic Vacuole*"),
text7 = c("Apoptosis*", "Channel Activity*"),
text8 = c("ECM-receptor interaction*", "Nucleosome*")
)
# note how we set the width of this empty annotation
ha = rowAnnotation(foo = anno_empty(border = FALSE,
width = max_text_width(unlist(heatmap_enrichment_terms)) + unit(4, "mm")))
Heatmap(logFC_matrix, name = "logFC",
cluster_rows = TRUE,
show_row_dend = TRUE,
width = unit(8, "cm"),
heatmap_legend_param = list(direction = "horizontal"),
cluster_columns = FALSE,
split=8,
show_row_names = FALSE,
show_column_names = TRUE,
column_names_side = "top",
clustering_distance_rows = "pearson",
row_names_gp = gpar(fontsize = 10),
column_names_gp = gpar(fontsize = 10),
column_names_rot = 0,
column_names_centered = TRUE,
right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
)
for(i in 1:8) {
+ decorate_annotation("foo", slice = i, {
grid.rect(x = 0, width = unit(2, "mm"), gp = gpar(fill = i, col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
}
Heatmap(logFC_matrix, name = "logFC",
cluster_rows = TRUE,
show_row_dend = TRUE,
width = unit(8, "cm"),
heatmap_legend_param = list(direction = "horizontal"),
cluster_columns = FALSE,
split=8,
show_row_names = FALSE,
show_column_names = TRUE,
column_names_side = "top",
clustering_distance_rows = "pearson",
row_names_gp = gpar(fontsize = 10),
column_names_gp = gpar(fontsize = 10),
column_names_rot = 0,
column_names_centered = TRUE,
right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
)
for(i in 1:8) {
+ decorate_annotation("foo", slice = i, {
grid.rect(x = 0, width = unit(0.5, "mm"), gp = gpar(fill = "black", col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
}
grid.rect(x = 0+ unit(1.5, "mm"), width = unit(0.5, "mm"), gp = gpar(fill = "black", col = NA), just = "left")
Heatmap(logFC_matrix, name = "logFC",
cluster_rows = TRUE,
show_row_dend = TRUE,
width = unit(8, "cm"),
heatmap_legend_param = list(direction = "horizontal"),
cluster_columns = FALSE,
split=8,
show_row_names = FALSE,
show_column_names = TRUE,
column_names_side = "top",
clustering_distance_rows = "pearson",
row_names_gp = gpar(fontsize = 10),
column_names_gp = gpar(fontsize = 10),
column_names_rot = 0,
column_names_centered = TRUE,
right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
)
for(i in 1:8) {
+ decorate_annotation("foo", slice = i, {
grid.rect(x = 0+ unit(0.5, "mm"), width = unit(0.5, "mm"), gp = gpar(fill = "black", col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
}
Heatmap(logFC_matrix, name = "logFC",
cluster_rows = TRUE,
show_row_dend = TRUE,
width = unit(8, "cm"),
heatmap_legend_param = list(direction = "horizontal"),
cluster_columns = FALSE,
split=8,
show_row_names = FALSE,
show_column_names = TRUE,
column_names_side = "top",
clustering_distance_rows = "pearson",
row_names_gp = gpar(fontsize = 10),
column_names_gp = gpar(fontsize = 10),
column_names_rot = 0,
column_names_centered = TRUE,
right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
)
for(i in 1:8) {
+ decorate_annotation("foo", slice = i, {
grid.rect(x = 0.1, width = unit(0.5, "mm"), gp = gpar(fill = "black", col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
}
Heatmap(logFC_matrix, name = "logFC",
cluster_rows = TRUE,
show_row_dend = TRUE,
width = unit(8, "cm"),
heatmap_legend_param = list(direction = "horizontal"),
cluster_columns = FALSE,
split=8,
show_row_names = FALSE,
show_column_names = TRUE,
column_names_side = "top",
clustering_distance_rows = "pearson",
row_names_gp = gpar(fontsize = 10),
column_names_gp = gpar(fontsize = 10),
column_names_rot = 0,
column_names_centered = TRUE,
right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
)
for(i in 1:8) {
+ decorate_annotation("foo", slice = i, {
grid.rect(x = 0.01, width = unit(0.5, "mm"), gp = gpar(fill = "black", col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
}
Heatmap(logFC_matrix, name = "logFC",
cluster_rows = TRUE,
show_row_dend = TRUE,
width = unit(8, "cm"),
heatmap_legend_param = list(direction = "horizontal"),
cluster_columns = FALSE,
split=8,
show_row_names = FALSE,
show_column_names = TRUE,
column_names_side = "top",
clustering_distance_rows = "pearson",
row_names_gp = gpar(fontsize = 10),
column_names_gp = gpar(fontsize = 10),
column_names_rot = 0,
column_names_centered = TRUE,
right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
)
for(i in 1:8) {
+ decorate_annotation("foo", slice = i, {
grid.rect(x = 0.01, width = unit(0.75, "mm"), gp = gpar(fill = "black", col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
}
Heatmap(logFC_matrix, name = "logFC",
cluster_rows = TRUE,
show_row_dend = TRUE,
width = unit(8, "cm"),
heatmap_legend_param = list(direction = "horizontal"),
cluster_columns = FALSE,
split=8,
show_row_names = FALSE,
show_column_names = TRUE,
column_names_side = "top",
clustering_distance_rows = "pearson",
row_names_gp = gpar(fontsize = 10),
column_names_gp = gpar(fontsize = 12),
column_names_rot = 0,
column_names_centered = TRUE,
right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
)
for(i in 1:8) {
+ decorate_annotation("foo", slice = i, {
grid.rect(x = 0.01, width = unit(0.75, "mm"), gp = gpar(fill = "black", col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
}
png(file="figures/test.logFC_heatmap.png", width=10, height=9, res=1200,units = "in")
Heatmap(logFC_matrix, name = "logFC",
cluster_rows = TRUE,
show_row_dend = TRUE,
width = unit(8, "cm"),
heatmap_legend_param = list(direction = "horizontal"),
cluster_columns = FALSE,
split=8,
show_row_names = FALSE,
show_column_names = TRUE,
column_names_side = "top",
clustering_distance_rows = "pearson",
row_names_gp = gpar(fontsize = 10),
column_names_gp = gpar(fontsize = 12),
column_names_rot = 0,
column_names_centered = TRUE,
right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
)
for(i in 1:8) {
+ decorate_annotation("foo", slice = i, {
grid.rect(x = 0.01, width = unit(0.75, "mm"), gp = gpar(fill = "black", col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
}
draw(heatmap_legend_side= "bottom")
png(file="figures/test.logFC_heatmap.png", width=10, height=9, res=1200,units = "in")
Heatmap(logFC_matrix, name = "logFC",
cluster_rows = TRUE,
show_row_dend = TRUE,
width = unit(8, "cm"),
heatmap_legend_param = list(direction = "horizontal"),
cluster_columns = FALSE,
split=8,
show_row_names = FALSE,
show_column_names = TRUE,
column_names_side = "top",
clustering_distance_rows = "pearson",
row_names_gp = gpar(fontsize = 10),
column_names_gp = gpar(fontsize = 12),
column_names_rot = 0,
column_names_centered = TRUE,
right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
)
for(i in 1:8) {
+ decorate_annotation("foo", slice = i, {
grid.rect(x = 0.01, width = unit(0.75, "mm"), gp = gpar(fill = "black", col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
}
draw(., heatmap_legend_side= "bottom")
png(file="figures/test.logFC_heatmap.png", width=10, height=9, res=1200,units = "in")
Heatmap(logFC_matrix, name = "logFC",
cluster_rows = TRUE,
show_row_dend = TRUE,
width = unit(8, "cm"),
heatmap_legend_param = list(direction = "horizontal"),
cluster_columns = FALSE,
split=8,
show_row_names = FALSE,
show_column_names = TRUE,
column_names_side = "top",
clustering_distance_rows = "pearson",
row_names_gp = gpar(fontsize = 10),
column_names_gp = gpar(fontsize = 12),
column_names_rot = 0,
column_names_centered = TRUE,
right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
)
for(i in 1:8) {
+ decorate_annotation("foo", slice = i, {
grid.rect(x = 0.01, width = unit(0.75, "mm"), gp = gpar(fill = "black", col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
} %>% draw()
png(file="figures/test.logFC_heatmap.png", width=10, height=9, res=1200,units = "in")
Heatmap(logFC_matrix, name = "logFC",
cluster_rows = TRUE,
show_row_dend = TRUE,
width = unit(8, "cm"),
heatmap_legend_param = list(direction = "horizontal"),
cluster_columns = FALSE,
split=8,
show_row_names = FALSE,
show_column_names = TRUE,
column_names_side = "top",
clustering_distance_rows = "pearson",
row_names_gp = gpar(fontsize = 10),
column_names_gp = gpar(fontsize = 12),
column_names_rot = 0,
column_names_centered = TRUE,
right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
)
for(i in 1:8) {
+ decorate_annotation("foo", slice = i, {
grid.rect(x = 0.01, width = unit(0.75, "mm"), gp = gpar(fill = "black", col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
}
#draw(., heatmap_legend_side= "bottom")
dev.off()
png(file="figures/test.logFC_heatmap.png", width=10, height=9, res=1200,units = "in")
Heatmap(logFC_matrix, name = "logFC",
cluster_rows = TRUE,
show_row_dend = TRUE,
width = unit(8, "cm"),
heatmap_legend_param = list(direction = "horizontal"),
cluster_columns = FALSE,
split=8,
show_row_names = FALSE,
show_column_names = TRUE,
heatmap_legend_side= "bottom",
column_names_side = "top",
clustering_distance_rows = "pearson",
row_names_gp = gpar(fontsize = 10),
column_names_gp = gpar(fontsize = 12),
column_names_rot = 0,
column_names_centered = TRUE,
right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
)
heatmap_legend_side
heatmap2 <- Heatmap(logFC_matrix, name = "logFC",
cluster_rows = TRUE,
show_row_dend = TRUE,
width = unit(8, "cm"),
heatmap_legend_param = list(direction = "horizontal"),
cluster_columns = FALSE,
split=8,
show_row_names = FALSE,
show_column_names = TRUE,
heatmap_legend_side= "bottom",
column_names_side = "top",
clustering_distance_rows = "pearson",
row_names_gp = gpar(fontsize = 10),
column_names_gp = gpar(fontsize = 12),
column_names_rot = 0,
column_names_centered = TRUE,
right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
)
heatmap2 <- Heatmap(logFC_matrix, name = "logFC",
cluster_rows = TRUE,
show_row_dend = TRUE,
width = unit(8, "cm"),
heatmap_legend_param = list(direction = "horizontal"),
cluster_columns = FALSE,
split=8,
show_row_names = FALSE,
show_column_names = TRUE,
column_names_side = "top",
clustering_distance_rows = "pearson",
row_names_gp = gpar(fontsize = 10),
column_names_gp = gpar(fontsize = 12),
column_names_rot = 0,
column_names_centered = TRUE,
right_annotation = ha,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.rect(x, y, width, height, gp = gpar(fill = fill, col = NA))
if (significance_matrix[i, j] == "*") {
grid.text("*", x, y, gp = gpar(col = "black", alpha=0.5, fontsize = 6))
}
}
)
heatmap2 %>%
for(i in 1:8) {
+ decorate_annotation("foo", slice = i, {
grid.rect(x = 0.01, width = unit(0.75, "mm"), gp = gpar(fill = "black", col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
}
heatmap2 +
for(i in 1:8) {
+ decorate_annotation("foo", slice = i, {
grid.rect(x = 0.01, width = unit(0.75, "mm"), gp = gpar(fill = "black", col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
}
heatmap2
for(i in 1:8) {
+ decorate_annotation("foo", slice = i, {
grid.rect(x = 0.01, width = unit(0.75, "mm"), gp = gpar(fill = "black", col = NA), just = "left")
grid.text(paste(heatmap_enrichment_terms[[i]], collapse = "\n"), x = unit(4, "mm"), just = "left")
})
}
pak("seqinr")
library(seqinr)
#| echo: false
read.fasta("~/Documents/RV82B2_results/RV82B2_fasta-files/RV82B2_1_2_ADE2.fasta")
#| echo: false
read.fasta("~/Documents/RV82B2_results/RV82B2_fasta-files/RV82B2_1_2_ADE2.fasta") %>% plot()
#| echo: false
read.fasta("~/Documents/RV82B2_results/RV82B2_fasta-files/RV82B2_1_2_ADE2.fasta") %>% plot.fasta()
pak("ggmsa")
pak("ggmsa")
library(ggmsa)
save.image("~/Documents/GitHub/CanarySeq/jul17snapshot.RData")
knitr::opts_chunk$set(echo = TRUE)
#pak("eulerr")
library(eulerr)
library(cowplot)
library(ggplot2)
library(tidyverse)
library(ggpubr)
library(here)
library(kableExtra)
library(AnnotationHub)
library(gridtext)
library(graphics)
library(data.table)
library(edgeR)
library(ComplexUpset)
library(ComplexHeatmap)
library(tidyverse)
library(clusterProfiler)
library(flextable)
library(GGally)
library(biomartr)
library(gt)
options(ggrepel.max.overlaps = Inf)
set.seed(123)
